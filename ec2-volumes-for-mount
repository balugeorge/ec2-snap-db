#!/bin/bash
#set -x
set -o pipefail

die() { echo "$@" 1>&2; exit 1; }

if [ $# -eq 0 ]; then
  die 'Usage: ec2-volumes-for-mount MOUNT [MOUNT...]'
fi

# Re-exec under sudo if we aren't running as root
if [ $EUID -ne 0 ]; then
  echo "Not running as root; re-executing under sudo" 1>&2
  exec sudo env AWS_ACCESS_KEY=$AWS_ACCESS_KEY AWS_SECRET_KEY=$AWS_SECRET_KEY "$0" "$@"
fi

real_device() {
  local DEVICE="$1"
  test -L $DEVICE && DEVICE=`readlink -f $DEVICE`
  if [ ! -b $DEVICE ]; then
    die "Not a device: $DEVICE"
  fi
  echo $DEVICE
}

raid_components() {
  local DEVICE="$1"
  if [ ! -b $DEVICE ]; then
    die "Not a device: $DEVICE"
  fi
  mdadm --detail $DEVICE | awk 'NR > 1 && $NF ~ /^\/dev\// { print $NF }'
}

lvm_components() {
  local DEVICE="$1"
  if [ ! -b $DEVICE ]; then
    die "Not a device: $DEVICE"
  fi
  local DM_DEVICE=/dev/mapper/`dmsetup info --columns --noheading $DEVICE | cut -d: -f1`
  lvs -o devices --noheadings $DM_DEVICE  | sed -e 's/^[[:space:]]\+//; s/([0-9]\+)$//'
}

declare -a DEVICES=()
for MOUNT in "$@"; do
  DEVICE=`awk -v mount=$MOUNT '$1 ~ /^\/dev\// && $2 == mount { print $1 }' /etc/mtab`
  if [ -z $DEVICE ]; then
    die "The path '$MOUNT' is not a mount point"
  fi
  DEVICE=`real_device $DEVICE`
  read DEVICE_MAJOR DEVICE_MINOR < <(stat -c '0x%t 0x%T' $DEVICE | xargs printf '%d %d\n')
  case $DEVICE_MAJOR in
    9) # RAID
      RAID_DEVICES=`raid_components $DEVICE`
      if [ $? -ne 0 ]; then
        exit 1
      fi
      for DEVICE in $RAID_DEVICES; do
        DEVICE=`real_device $DEVICE`
        DEVICES+=("${DEVICE/xvd/sd}:$MOUNT")
      done
      ;;
    202) # Xen Virtual Block Device
      DEVICES+=("${DEVICE/xvd/sd}:$MOUNT")
      ;;
    252|253) # LVM
      LVM_DEVICES=`lvm_components $DEVICE`
      if [ $? -ne 0 ]; then
        exit 1
      fi
      for DEVICE in $LVM_DEVICES; do
        DEVICE=`real_device $DEVICE`
        DEVICES+=("${DEVICE/xvd/sd}:$MOUNT")
      done
      ;;
    *)
      echo "Unknown device type $DEVICE_MAJOR:$DEVICE_MINOR for $DEVICE at $MOUNT"
      exit 1
      ;;
  esac
done

eval `./ec2-instance-env`

ec2-describe-volumes \
  --region "$EC2_REGION" \
  --filter "attachment.instance-id=$EC2_INSTANCE_ID" \
  --filter "attachment.status=attached" | \
awk '$1 == "ATTACHMENT" { print $4 ":" $2 }' | sort -t: -k1,1 | \
join -j1 -a1 -t: <(printf -- '%s\n' "${DEVICES[@]}" | sort -t: -k1,1) - | \
awk -F: -v OFS=: '{ print $2, $3, $1 }'
